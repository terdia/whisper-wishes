version: '3'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
    networks:
      - dandywishes_local

  frontend:
    image: dandywishes_frontend:${BUILD_VERSION:-latest}
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
    networks:
      - dandywishes_local

  portainer:
    image: portainer/portainer-ce:latest
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - "9000:9000"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - dandywishes_local

networks:
  dandywishes_local:
    driver: overlay

volumes:
  portainer_data: